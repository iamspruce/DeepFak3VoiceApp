name: Build and Release Executables

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-macos:
    name: Build macOS DMG
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # --- ADDED THIS STEP ---
      - name: Install system dependencies
        run: brew install portaudio

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name DeepFak3rVoiceApp --icon app.icns --add-data 'out:out' main.py

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          mkdir -p dist/dmg
          cp -r dist/DeepFak3rVoiceApp.app dist/dmg/
          create-dmg \
            --volname "DeepFak3rVoiceApp" \
            --volicon "app.icns" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "DeepFak3rVoiceApp.app" 175 120 \
            --hide-extension "DeepFak3rVoiceApp.app" \
            --app-drop-link 425 120 \
            "dist/DeepFak3rVoiceApp.dmg" \
            "dist/dmg/"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/DeepFak3rVoiceApp.dmg
          asset_name: DeepFak3rVoiceApp.dmg
          asset_content_type: application/octet-stream

  build-windows:
    name: Build Windows EXE
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # --- MODIFIED THIS STEP ---
      # On Windows, pip should find a pre-compiled wheel.
      # Upgrading pip, wheel, and setuptools is the best first step.
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --name DeepFak3rVoiceApp --icon app.ico --add-data "out;out" main.py

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/DeepFak3rVoiceApp.exe
          asset_name: DeepFak3rVoiceApp.exe
          asset_content_type: application/vnd.microsoft.portable-executable
