"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[97],{4501:function(e,t,r){r.d(t,{Vt:function(){return a},hy:function(){return o},qE:function(){return i}});let o={os:"linux",arch:"x64",hasGPU:!1,gpus:[],totalVRAM:0,recommendedSetup:"runpod"};function a(){return new Promise(e=>{let t=0,r=()=>{var o,a;"function"==typeof(null===(a=window.pywebview)||void 0===a?void 0:null===(o=a.api)||void 0===o?void 0:o.detect_hardware)?e(!0):++t>=50?e(!1):setTimeout(r,100)};r()})}async function i(){try{if(!await a())return await n();{let e=await window.pywebview.api.detect_hardware();return console.log("[HardwareDetection] Detected hardware via PyWebView:",e),{os:e.os,arch:e.arch,hasGPU:e.hasGPU,gpus:e.gpus,totalVRAM:e.totalVRAM,recommendedSetup:e.recommendedSetup}}}catch(e){return console.error("[HardwareDetection] Failed to detect hardware via PyWebView:",e),o}}async function n(){let e,t;let r=navigator.userAgent.toLowerCase();e=r.includes("win")?"windows":r.includes("mac")?"macos":"linux";let o="x64";(r.includes("arm")||r.includes("aarch64"))&&(o="arm64");let a=[],i=!1,n=0;try{let e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(t&&"function"==typeof t.getExtension){let e=t.getExtension("WEBGL_debug_renderer_info");if(e){let r=t.getParameter(e.UNMASKED_RENDERER_GL).toLowerCase();console.log("[HardwareDetection] WebGL Renderer:",r),r.includes("nvidia")||r.includes("geforce")?(i=!0,n=8,a.push({vendor:"nvidia",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60})):r.includes("amd")||r.includes("radeon")?(i=!0,n=8,a.push({vendor:"amd",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60})):r.includes("intel")?(i=!0,n=4,a.push({vendor:"intel",model:"unknown",vramGB:4,isSupported:!1,performanceScore:30})):r.includes("apple")&&(i=!0,n=8,a.push({vendor:"apple",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60}))}}}catch(e){console.warn("[HardwareDetection] WebGL GPU detection failed:",e)}return t=i&&n>=12?"local":i&&n>=6?"remote":"runpod",{os:e,arch:o,hasGPU:i,gpus:a,totalVRAM:n,recommendedSetup:t}}},105:function(e,t,r){r.d(t,{C:function(){return a}});class o{async init(){return new Promise((e,t)=>{let r=indexedDB.open(this.dbName,this.version);r.onerror=()=>t(r.error),r.onsuccess=()=>{this.db=r.result,e()},r.onupgradeneeded=e=>{let t=e.target.result;if(!t.objectStoreNames.contains("voices")){let e=t.createObjectStore("voices",{keyPath:"id"});e.createIndex("name","name",{unique:!1}),e.createIndex("createdAt","createdAt",{unique:!1})}if(!t.objectStoreNames.contains("generatedAudios")){let e=t.createObjectStore("generatedAudios",{keyPath:"id"});e.createIndex("voiceId","voiceId",{unique:!1}),e.createIndex("createdAt","createdAt",{unique:!1})}t.objectStoreNames.contains("settings")||t.createObjectStore("settings",{keyPath:"key"})}})}async saveVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["voices"],"readwrite").objectStore("voices").put(e);o.onerror=()=>r(o.error),o.onsuccess=()=>t()})}async getVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["voices"],"readonly").objectStore("voices").get(e);o.onerror=()=>r(o.error),o.onsuccess=()=>t(o.result||null)})}async getAllVoices(){if(!this.db)throw Error("Database not initialized");return new Promise((e,t)=>{let r=this.db.transaction(["voices"],"readonly").objectStore("voices").getAll();r.onerror=()=>t(r.error),r.onsuccess=()=>e(r.result||[])})}async deleteVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["voices"],"readwrite").objectStore("voices").delete(e);o.onerror=()=>r(o.error),o.onsuccess=()=>t()})}async saveGeneratedAudio(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["generatedAudios"],"readwrite").objectStore("generatedAudios").put(e);o.onerror=()=>r(o.error),o.onsuccess=()=>t()})}async getAllGeneratedAudios(){if(!this.db)throw Error("Database not initialized");return new Promise((e,t)=>{let r=this.db.transaction(["generatedAudios"],"readonly").objectStore("generatedAudios").getAll();r.onerror=()=>t(r.error),r.onsuccess=()=>e(r.result||[])})}async deleteGeneratedAudio(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["generatedAudios"],"readwrite").objectStore("generatedAudios").delete(e);o.onerror=()=>r(o.error),o.onsuccess=()=>t()})}async saveSetting(e,t){if(!this.db)throw Error("Database not initialized");return new Promise((r,o)=>{let a=this.db.transaction(["settings"],"readwrite").objectStore("settings").put({key:e,value:t});a.onerror=()=>o(a.error),a.onsuccess=()=>r()})}async getSetting(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let o=this.db.transaction(["settings"],"readonly").objectStore("settings").get(e);o.onerror=()=>r(o.error),o.onsuccess=()=>{var e;return t((null===(e=o.result)||void 0===e?void 0:e.value)||null)}})}createObjectURL(e){return URL.createObjectURL(e)}revokeObjectURL(e){URL.revokeObjectURL(e)}constructor(){this.db=null,this.dbName="tts-studio",this.version=1}}let a=new o;a.init().catch(console.error)},2682:function(e,t,r){r.d(t,{Yg:function(){return o}});class o{static getInstance(){return o.instance||(o.instance=new o),o.instance}setProgressCallback(e){this.progressCallback=e}async setupLocalServer(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available. Please run this in the desktop app.");try{console.log("[LocalServerManager] Starting local server setup..."),window.pywebview.api.start_local_server_setup()}catch(e){throw console.error("[LocalServerManager] Failed to start setup:",e),Error("Failed to start server setup: ".concat(e))}}async getServerInfo(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{let e=window.pywebview.api.check_local_server();return console.log("[LocalServerManager] Server info:",e),e}catch(e){throw console.error("[LocalServerManager] Failed to get server info:",e),Error("Failed to get server info: ".concat(e))}}async checkInstallation(){try{return(await this.getServerInfo()).isInstalled}catch(e){return console.error("[LocalServerManager] Failed to check installation:",e),!1}}async startServer(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{console.log("[LocalServerManager] Starting local server..."),window.pywebview.api.start_local_server(),this.startStatusPolling()}catch(e){throw console.error("[LocalServerManager] Failed to start server:",e),Error("Failed to start server: ".concat(e))}}async stopServer(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{console.log("[LocalServerManager] Stopping local server..."),window.pywebview.api.stop_local_server(),this.stopStatusPolling()}catch(e){throw console.error("[LocalServerManager] Failed to stop server:",e),Error("Failed to stop server: ".concat(e))}}getServerUrl(){return"http://localhost:8000"}async cancelSetup(){console.log("[LocalServerManager] Setup cancellation requested")}async downloadAndInstall(){return this.setupLocalServer()}isPyWebViewAvailable(){var e;return!!(null===(e=window.pywebview)||void 0===e?void 0:e.api)}startStatusPolling(){this.stopStatusPolling(),this.pollInterval=setInterval(async()=>{try{await this.getServerInfo()}catch(e){console.warn("[LocalServerManager] Status poll failed:",e)}},3e3)}stopStatusPolling(){this.pollInterval&&(clearInterval(this.pollInterval),this.pollInterval=void 0)}static async create(e,t){return o.getInstance()}constructor(){window.dispatchLocalServerProgress=e=>{var t;console.log("[LocalServerManager] Received progress from Python:",e),null===(t=this.progressCallback)||void 0===t||t.call(this,e)}}}},2097:function(e,t,r){r.d(t,{m:function(){return d}});var o=r(3011),a=r(105),i=r(2682),n=r(4501);let s=async e=>{let t=e.mainAudio?new Blob([await e.mainAudio.arrayBuffer()]):null,r=await Promise.all(e.emotions.map(async e=>({id:e.id,name:e.name,audioBlob:e.audioFile?new Blob([await e.audioFile.arrayBuffer()]):null})));return{id:e.id,name:e.name,mainAudioBlob:t,emotions:r,createdAt:e.createdAt}},l=e=>({id:e.id,name:e.name,mainAudio:null,mainAudioUrl:e.mainAudioBlob?a.C.createObjectURL(e.mainAudioBlob):null,emotions:e.emotions.map(e=>({id:e.id,name:e.name,audioFile:null,audioUrl:e.audioBlob?a.C.createObjectURL(e.audioBlob):null})),createdAt:e.createdAt}),c=e=>({hasGPU:e.hasGPU,vramGB:e.totalVRAM,os:e.os,arch:e.arch,isChecking:!1,gpus:e.gpus,totalVRAM:e.totalVRAM,recommendedSetup:e.recommendedSetup,detectionTimestamp:new Date}),d=(0,o.U)((e,t)=>({licenseKey:null,licenseStatus:null,licenseLastChecked:null,isServerSetupComplete:!1,serverSetupStep:"license-input",voices:[],generatedAudios:[],currentText:"",selectedVoiceId:null,selectedEmotionId:null,isProcessing:!1,isLoading:!0,serverConfig:null,hardwareInfo:c(n.hy),initializeStore:async()=>{try{let r;await a.C.init();let o=await a.C.getSetting("licenseKey"),i=await a.C.getSetting("licenseStatus"),n=await a.C.getSetting("licenseLastChecked"),s=(await a.C.getAllVoices()).map(l),c=(await a.C.getAllGeneratedAudios()).map(e=>({id:e.id,text:e.text,voiceId:e.voiceId,emotionId:e.emotionId,audioUrl:a.C.createObjectURL(e.audioBlob),createdAt:e.createdAt})),d=await a.C.getSetting("currentText")||"",u=await a.C.getSetting("selectedVoiceId"),v=await a.C.getSetting("selectedEmotionId"),w=await a.C.getSetting("serverConfig"),h=w?JSON.parse(w):null,p=await a.C.getSetting("hardwareInfo");p?r=JSON.parse(p):(await t().checkHardware(),r=t().hardwareInfo);let g=!!h&&"online"===h.status;e({voices:s,generatedAudios:c,currentText:d,selectedVoiceId:u,selectedEmotionId:v,serverConfig:h,hardwareInfo:r,isServerSetupComplete:g,serverSetupStep:g?"complete":"license-input",licenseKey:o,licenseStatus:i,licenseLastChecked:n?new Date(n):null,isLoading:!1})}catch(t){console.error("Failed to initialize store:",t),e({isLoading:!1})}},addVoice:async t=>{let r={...t,id:crypto.randomUUID(),createdAt:new Date};try{let t=await s(r);await a.C.saveVoice(t),e(e=>({voices:[...e.voices,r]}))}catch(e){throw console.error("Failed to save voice:",e),e}},updateVoice:async(r,o)=>{let i=t(),n=i.voices.findIndex(e=>e.id===r);if(-1===n)return;let l={...i.voices[n],...o};try{let t=await s(l);await a.C.saveVoice(t),e(e=>({voices:e.voices.map(e=>e.id===r?l:e)}))}catch(e){throw console.error("Failed to update voice:",e),e}},deleteVoice:async r=>{try{await a.C.deleteVoice(r),e(e=>({voices:e.voices.filter(e=>e.id!==r),selectedVoiceId:e.selectedVoiceId===r?null:e.selectedVoiceId,selectedEmotionId:e.selectedVoiceId===r?null:e.selectedEmotionId}));let o=t();null===o.selectedVoiceId&&(await a.C.saveSetting("selectedVoiceId",null),await a.C.saveSetting("selectedEmotionId",null))}catch(e){throw console.error("Failed to delete voice:",e),e}},addEmotionToVoice:async(r,o)=>{let i={...o,id:crypto.randomUUID()},n=t().voices.find(e=>e.id===r);if(!n)return;let l={...n,emotions:[...n.emotions,i]};try{let t=await s(l);await a.C.saveVoice(t),e(e=>({voices:e.voices.map(e=>e.id===r?l:e)}))}catch(e){throw console.error("Failed to add emotion:",e),e}},removeEmotionFromVoice:async(r,o)=>{let i=t().voices.find(e=>e.id===r);if(!i)return;let n={...i,emotions:i.emotions.filter(e=>e.id!==o)};try{let i=await s(n);await a.C.saveVoice(i),e(e=>({voices:e.voices.map(e=>e.id===r?n:e),selectedEmotionId:e.selectedEmotionId===o?null:e.selectedEmotionId})),null===t().selectedEmotionId&&await a.C.saveSetting("selectedEmotionId",null)}catch(e){throw console.error("Failed to remove emotion:",e),e}},setText:t=>{e({currentText:t}),a.C.saveSetting("currentText",t).catch(console.error)},setSelectedVoice:t=>{e({selectedVoiceId:t,selectedEmotionId:null}),a.C.saveSetting("selectedVoiceId",t).catch(console.error),a.C.saveSetting("selectedEmotionId",null).catch(console.error)},setSelectedEmotion:t=>{e({selectedEmotionId:t}),a.C.saveSetting("selectedEmotionId",t).catch(console.error)},setProcessing:t=>e({isProcessing:t}),addGeneratedAudio:async(t,r)=>{try{if(!t.id||!t.voiceId||!r)throw Error("Invalid audio data");if(0===r.size)throw Error("Audio blob is empty");let o={id:t.id,text:t.text,voiceId:t.voiceId,emotionId:t.emotionId,audioBlob:r,createdAt:t.createdAt};return await a.C.saveGeneratedAudio(o),e(e=>({generatedAudios:[...e.generatedAudios,t]})),!0}catch(e){throw console.error("Failed to save generated audio:",e),e}},removeGeneratedAudio:async t=>{try{await a.C.deleteGeneratedAudio(t),e(e=>({generatedAudios:e.generatedAudios.filter(e=>e.id!==t)}))}catch(e){throw console.error("Failed to delete generated audio:",e),e}},checkHardware:async()=>{e(e=>({hardwareInfo:{...e.hardwareInfo,isChecking:!0}}));let{licenseKey:r}=t();try{let t=await (0,n.qE)(),o=c(t);e({hardwareInfo:o}),r?"local"===t.recommendedSetup?e({serverSetupStep:"server-download"}):"remote"===t.recommendedSetup?e({serverSetupStep:"url-input"}):e({serverSetupStep:"runpod-deploy"}):e({serverSetupStep:"license-input"}),await a.C.saveSetting("hardwareInfo",JSON.stringify(o))}catch(t){console.error("Hardware check failed:",t),e({hardwareInfo:{hasGPU:!1,vramGB:0,os:"linux",arch:"x64",isChecking:!1,gpus:[],totalVRAM:0,recommendedSetup:"runpod",detectionTimestamp:new Date},serverSetupStep:"runpod-deploy"})}},setServerConfig:async t=>{e({serverConfig:t}),await a.C.saveSetting("serverConfig",JSON.stringify(t))},setLicenseKey:async t=>{e({licenseKey:t}),await a.C.saveSetting("licenseKey",t)},verifyLicense:async()=>{let{licenseKey:r,serverConfig:o}=t();if(!r)return e({licenseStatus:"invalid"}),!1;e({licenseStatus:"checking"});try{if(!o)throw Error("Server not configured");let t=new FormData;t.append("license_key",r);let i=await fetch("".concat(o.url,"/verify-license"),{method:"POST",body:t});if(!i.ok)return e({licenseStatus:"invalid"}),await a.C.saveSetting("licenseStatus","invalid"),!1;{let t=await i.json();return e({licenseStatus:t.status,licenseLastChecked:new Date}),await a.C.saveSetting("licenseStatus",t.status),await a.C.saveSetting("licenseLastChecked",new Date().toISOString()),t.valid}}catch(t){return console.error("License verification failed:",t),e({licenseStatus:"invalid"}),!1}},checkServerHealth:async()=>{let{serverConfig:r,licenseKey:o}=t();if(!r)return!1;console.log("Checking server health at",r.url);try{let t;let i=new URL("".concat(r.url,"/health"));o&&i.searchParams.append("license_key",o),console.log("Health check URL:",i.toString());let n=await fetch(i.toString(),{method:"GET",timeout:5e3});if(console.log("Health check response:",n),!n.ok){let t={...r,status:"offline",lastChecked:new Date};return e({serverConfig:t}),await a.C.saveSetting("serverConfig",JSON.stringify(t)),!1}let s=await n.text();console.log("Raw response text:",s);try{t=JSON.parse(s)}catch(e){return console.error("JSON parse error:",e),!1}if(console.log("Health check data:",t),!1===t.license_valid){e({licenseStatus:t.license_status||"invalid"});let o={...r,status:"offline",lastChecked:new Date};return e({serverConfig:o}),await a.C.saveSetting("serverConfig",JSON.stringify(o)),!1}let l="healthy"===t.status;t.license_status&&(e({licenseStatus:t.license_status,licenseLastChecked:new Date}),await a.C.saveSetting("licenseStatus",t.license_status),await a.C.saveSetting("licenseLastChecked",new Date().toISOString()));let c={...r,status:l?"online":"offline",lastChecked:new Date};return e({serverConfig:c}),await a.C.saveSetting("serverConfig",JSON.stringify(c)),l}catch(o){let t={...r,status:"offline",lastChecked:new Date};return e({serverConfig:t}),await a.C.saveSetting("serverConfig",JSON.stringify(t)),!1}},downloadAndStartServer:async r=>{let{hardwareInfo:o}=t();if(!o)throw Error("Hardware info not available");if(!await (0,n.Vt)())throw Error("Cannot setup local server in web environment");e({serverSetupStep:"server-start"});try{let o=i.Yg.getInstance();r&&o.setProgressCallback(r),await o.setupLocalServer();let a={type:"local",url:o.getServerUrl(),status:"checking"};if(await t().setServerConfig(a),await t().checkServerHealth())e({isServerSetupComplete:!0,serverSetupStep:"complete"});else throw Error("Server failed to start properly")}catch(t){throw console.error("Server setup failed:",t),e({serverSetupStep:"url-input"}),t}},deployToRunPod:async(t,r)=>{e({serverSetupStep:"runpod-deploy"});try{var o,a;if(null===(a=window.pywebview)||void 0===a?void 0:null===(o=a.api)||void 0===o?void 0:o.start_runpod_deployment)await window.pywebview.api.start_runpod_deployment(t);else throw Error("RunPod deployment is only available in the desktop application.")}catch(t){console.error("Failed to start RunPod deployment:",t),r({stage:"error",progress:0,message:"Failed to start deployment process.",error:t instanceof Error?t.message:String(t)}),e({serverSetupStep:"runpod-deploy"})}},getVoiceSampleBlob:async(e,t)=>{let r=await a.C.getVoice(e);if(!r)return null;if(t){let e=r.emotions.find(e=>e.id===t);return(null==e?void 0:e.audioBlob)||null}return r.mainAudioBlob},setServerSetupStep:t=>e({serverSetupStep:t})}))}}]);