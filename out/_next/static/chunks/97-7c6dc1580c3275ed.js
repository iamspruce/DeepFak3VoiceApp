"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[97],{4501:function(e,t,r){r.d(t,{Vt:function(){return o},hy:function(){return a},qE:function(){return n}});let a={os:"windows",arch:"x64",hasGPU:!0,gpus:[],totalVRAM:0,recommendedSetup:"runpod"};function o(){return new Promise(e=>{let t=0,r=()=>{var a,o;"function"==typeof(null===(o=window.pywebview)||void 0===o?void 0:null===(a=o.api)||void 0===a?void 0:a.get_hardware_info)?e(!0):++t>=50?e(!1):setTimeout(r,100)};r()})}async function n(){try{if(!await o())return await i();{let e=await window.pywebview.api.get_hardware_info();return{os:e.os,arch:e.arch,hasGPU:e.hasGPU,gpus:e.gpus,totalVRAM:e.totalVRAM,recommendedSetup:e.recommendedSetup}}}catch(e){return console.error("[HardwareDetection] Failed to detect hardware via PyWebView:",e),a}}async function i(){let e,t;let r=navigator.userAgent.toLowerCase();e=r.includes("win")?"windows":r.includes("mac")?"macos":"linux",a.os=e;let o="x64";(r.includes("arm")||r.includes("aarch64"))&&(o="arm64");let n=[],i=!1,s=0;try{let e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(t&&"function"==typeof t.getExtension){let e=t.getExtension("WEBGL_debug_renderer_info");if(e){let r=t.getParameter(e.UNMASKED_RENDERER_GL).toLowerCase();console.log("Detected GPU renderer:",r),r.includes("nvidia")||r.includes("geforce")?(i=!0,s=8,n.push({vendor:"nvidia",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60})):r.includes("amd")||r.includes("radeon")?(i=!0,s=8,n.push({vendor:"amd",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60})):r.includes("intel")?(i=!0,s=24,n.push({vendor:"intel",model:"unknown",vramGB:4,isSupported:!1,performanceScore:30})):r.includes("apple")&&(i=!0,s=8,n.push({vendor:"apple",model:"unknown",vramGB:8,isSupported:!0,performanceScore:60}))}}}catch(e){return console.warn("[HardwareDetection] WebGL GPU detection failed:",e),a}return t=i&&s>=16?"local":i&&s>=6?"remote":"runpod",{os:e,arch:o,hasGPU:i,gpus:n,totalVRAM:s,recommendedSetup:t}}},105:function(e,t,r){r.d(t,{C:function(){return o}});class a{async init(){return new Promise((e,t)=>{let r=indexedDB.open(this.dbName,this.version);r.onerror=()=>t(r.error),r.onsuccess=()=>{this.db=r.result,e()},r.onupgradeneeded=e=>{let t=e.target.result;if(!t.objectStoreNames.contains("voices")){let e=t.createObjectStore("voices",{keyPath:"id"});e.createIndex("name","name",{unique:!1}),e.createIndex("createdAt","createdAt",{unique:!1})}if(!t.objectStoreNames.contains("generatedAudios")){let e=t.createObjectStore("generatedAudios",{keyPath:"id"});e.createIndex("voiceId","voiceId",{unique:!1}),e.createIndex("createdAt","createdAt",{unique:!1})}t.objectStoreNames.contains("settings")||t.createObjectStore("settings",{keyPath:"key"})}})}async saveVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["voices"],"readwrite").objectStore("voices").put(e);a.onerror=()=>r(a.error),a.onsuccess=()=>t()})}async getVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["voices"],"readonly").objectStore("voices").get(e);a.onerror=()=>r(a.error),a.onsuccess=()=>t(a.result||null)})}async getAllVoices(){if(!this.db)throw Error("Database not initialized");return new Promise((e,t)=>{let r=this.db.transaction(["voices"],"readonly").objectStore("voices").getAll();r.onerror=()=>t(r.error),r.onsuccess=()=>e(r.result||[])})}async deleteVoice(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["voices"],"readwrite").objectStore("voices").delete(e);a.onerror=()=>r(a.error),a.onsuccess=()=>t()})}async saveGeneratedAudio(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["generatedAudios"],"readwrite").objectStore("generatedAudios").put(e);a.onerror=()=>r(a.error),a.onsuccess=()=>t()})}async getAllGeneratedAudios(){if(!this.db)throw Error("Database not initialized");return new Promise((e,t)=>{let r=this.db.transaction(["generatedAudios"],"readonly").objectStore("generatedAudios").getAll();r.onerror=()=>t(r.error),r.onsuccess=()=>e(r.result||[])})}async deleteGeneratedAudio(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["generatedAudios"],"readwrite").objectStore("generatedAudios").delete(e);a.onerror=()=>r(a.error),a.onsuccess=()=>t()})}async saveSetting(e,t){if(!this.db)throw Error("Database not initialized");return new Promise((r,a)=>{let o=this.db.transaction(["settings"],"readwrite").objectStore("settings").put({key:e,value:t});o.onerror=()=>a(o.error),o.onsuccess=()=>r()})}async getSetting(e){if(!this.db)throw Error("Database not initialized");return new Promise((t,r)=>{let a=this.db.transaction(["settings"],"readonly").objectStore("settings").get(e);a.onerror=()=>r(a.error),a.onsuccess=()=>{var e;return t((null===(e=a.result)||void 0===e?void 0:e.value)||null)}})}createObjectURL(e){return URL.createObjectURL(e)}revokeObjectURL(e){URL.revokeObjectURL(e)}constructor(){this.db=null,this.dbName="tts-studio",this.version=1}}let o=new a;o.init().catch(console.error)},2682:function(e,t,r){r.d(t,{Yg:function(){return a}});class a{static getInstance(){return a.instance||(a.instance=new a),a.instance}static resetInstance(){a.instance&&(a.instance.cleanup(),a.instance=null)}_setupGlobalProgressDispatcher(){window.dispatchLocalServerProgress=e=>{var t;console.log("[LocalServerManager] Progress update:",e.stage,"".concat(e.progress,"%"),e.message),("complete"===e.stage||"error"===e.stage)&&(this.isSetupInProgress=!1),null===(t=this.progressCallback)||void 0===t||t.call(this,e)}}setProgressCallback(e){this.progressCallback=e}async setupLocalServer(){if(this.isSetupInProgress)throw console.warn("[LocalServerManager] Setup already in progress"),Error("Server setup is already in progress");if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available. Please run this in the desktop app.");this.isSetupInProgress=!0;try{console.log("[LocalServerManager] Starting local server setup..."),this.healthCheckRetries=0,window.pywebview.api.start_local_server_setup(),console.log("[LocalServerManager] Setup request sent to backend")}catch(e){throw this.isSetupInProgress=!1,console.error("[LocalServerManager] Failed to start setup:",e),Error("Failed to start server setup: ".concat(e instanceof Error?e.message:"Unknown error"))}}async getServerInfo(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{let e=window.pywebview.api.check_local_server();return console.log("[LocalServerManager] Server info retrieved:",{isInstalled:e.isInstalled,isRunning:e.isRunning,version:e.version,pid:e.pid}),e}catch(e){throw console.error("[LocalServerManager] Failed to get server info:",e),Error("Failed to get server info: ".concat(e instanceof Error?e.message:"Unknown error"))}}async checkInstallation(){try{return(await this.getServerInfo()).isInstalled}catch(e){return console.error("[LocalServerManager] Failed to check installation:",e),!1}}async startServer(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{console.log("[LocalServerManager] Starting local server..."),window.pywebview.api.start_local_server(),this.startStatusPolling(),await this._waitForServerReady(),console.log("[LocalServerManager] Server started successfully")}catch(e){throw console.error("[LocalServerManager] Failed to start server:",e),this.stopStatusPolling(),Error("Failed to start server: ".concat(e instanceof Error?e.message:"Unknown error"))}}async stopServer(){if(!this.isPyWebViewAvailable())throw Error("PyWebView API not available");try{console.log("[LocalServerManager] Stopping local server..."),window.pywebview.api.stop_local_server(),this.stopStatusPolling(),await this._delay(1e3),console.log("[LocalServerManager] Server stopped successfully")}catch(e){throw console.error("[LocalServerManager] Failed to stop server:",e),Error("Failed to stop server: ".concat(e instanceof Error?e.message:"Unknown error"))}}getServerUrl(){return"http://localhost:".concat(this.SERVER_PORT)}async cancelSetup(){if(!this.isSetupInProgress){console.log("[LocalServerManager] No setup in progress to cancel");return}console.log("[LocalServerManager] Cancelling setup...");try{this.isPyWebViewAvailable()?(window.pywebview.api.cancel_local_server_setup(),console.log("[LocalServerManager] Cancellation request sent to backend")):console.warn("[LocalServerManager] Backend cancellation API not available")}catch(e){console.error("[LocalServerManager] Error cancelling setup:",e)}finally{this.isSetupInProgress=!1}}isSetupRunning(){return this.isSetupInProgress}isPyWebViewAvailable(){var e;return!!(null===(e=window.pywebview)||void 0===e?void 0:e.api)}startStatusPolling(){this.stopStatusPolling(),console.log("[LocalServerManager] Starting status polling"),this.pollInterval=setInterval(async()=>{try{!(await this.getServerInfo()).isRunning&&this.pollInterval&&(console.warn("[LocalServerManager] Server stopped, ending poll"),this.stopStatusPolling())}catch(e){console.warn("[LocalServerManager] Status poll failed:",e)}},this.POLL_INTERVAL_MS)}stopStatusPolling(){this.pollInterval&&(clearInterval(this.pollInterval),this.pollInterval=void 0,console.log("[LocalServerManager] Status polling stopped"))}async _waitForServerReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:30,t=0,r=1e3;for(;t<e;){try{if((await this.getServerInfo()).isRunning&&await this._checkServerHealth()){console.log("[LocalServerManager] Server is ready and healthy"),this.healthCheckRetries=0;return}}catch(r){console.warn("[LocalServerManager] Server not ready (attempt ".concat(t+1,"/").concat(e,"):"),r)}await this._delay(Math.min(r,5e3)),r*=1.5,t++}throw Error("Server failed to become ready within the expected time")}async _checkServerHealth(){try{let e=new AbortController,t=setTimeout(()=>e.abort(),5e3),r=await fetch("".concat(this.getServerUrl(),"/health"),{signal:e.signal});if(clearTimeout(t),r.ok)return this.healthCheckRetries=0,!0;return console.warn("[LocalServerManager] Health check returned status ".concat(r.status)),!1}catch(e){if(this.healthCheckRetries++,this.healthCheckRetries>=this.MAX_HEALTH_CHECK_RETRIES)return console.error("[LocalServerManager] Health check failed after ".concat(this.MAX_HEALTH_CHECK_RETRIES," retries:"),e),this.healthCheckRetries=0,!1;return console.warn("[LocalServerManager] Health check attempt ".concat(this.healthCheckRetries,"/").concat(this.MAX_HEALTH_CHECK_RETRIES," failed:"),e),!1}}_delay(e){return new Promise(t=>setTimeout(t,e))}cleanup(){this.stopStatusPolling(),this.progressCallback=void 0,this.isSetupInProgress=!1,delete window.dispatchLocalServerProgress}static async create(e,t){return console.log("[LocalServerManager] Creating manager for ".concat(e,"-").concat(t)),a.getInstance()}constructor(){this.healthCheckRetries=0,this.MAX_HEALTH_CHECK_RETRIES=3,this.POLL_INTERVAL_MS=3e3,this.SERVER_PORT=8e3,this.isSetupInProgress=!1,this._setupGlobalProgressDispatcher()}}a.instance=null},2097:function(e,t,r){r.d(t,{m:function(){return d}});var a=r(3011),o=r(105),n=r(2682),i=r(4501);let s=async e=>{let t=e.mainAudio?new Blob([await e.mainAudio.arrayBuffer()]):null,r=await Promise.all(e.emotions.map(async e=>({id:e.id,name:e.name,audioBlob:e.audioFile?new Blob([await e.audioFile.arrayBuffer()]):null})));return{id:e.id,name:e.name,mainAudioBlob:t,emotions:r,createdAt:e.createdAt}},l=e=>({id:e.id,name:e.name,mainAudio:null,mainAudioUrl:e.mainAudioBlob?o.C.createObjectURL(e.mainAudioBlob):null,emotions:e.emotions.map(e=>({id:e.id,name:e.name,audioFile:null,audioUrl:e.audioBlob?o.C.createObjectURL(e.audioBlob):null})),createdAt:e.createdAt}),c=e=>({hasGPU:e.hasGPU,vramGB:e.totalVRAM,os:e.os,arch:e.arch,isChecking:!1,gpus:e.gpus,totalVRAM:e.totalVRAM,recommendedSetup:e.recommendedSetup,detectionTimestamp:new Date}),d=(0,a.U)((e,t)=>({licenseKey:null,licenseStatus:null,licenseLastChecked:null,isServerSetupComplete:!1,serverSetupStep:"license-input",voices:[],generatedAudios:[],currentText:"",selectedVoiceId:null,selectedEmotionId:null,isProcessing:!1,isLoading:!0,serverConfig:null,hardwareInfo:c(i.hy),initializeStore:async()=>{try{let r;await o.C.init();let a=await o.C.getSetting("licenseKey"),n=await o.C.getSetting("licenseStatus"),i=await o.C.getSetting("licenseLastChecked"),s=(await o.C.getAllVoices()).map(l),c=(await o.C.getAllGeneratedAudios()).map(e=>({id:e.id,text:e.text,voiceId:e.voiceId,emotionId:e.emotionId,audioUrl:o.C.createObjectURL(e.audioBlob),createdAt:e.createdAt})),d=await o.C.getSetting("currentText")||"",u=await o.C.getSetting("selectedVoiceId"),h=await o.C.getSetting("selectedEmotionId"),g=await o.C.getSetting("serverConfig"),v=g?JSON.parse(g):null,p=await o.C.getSetting("hardwareInfo");console.log("Loaded hardwareInfoStr:",p),p?r=JSON.parse(p):(await t().checkHardware(),r=t().hardwareInfo);let w=!!v&&"online"===v.status;e({voices:s,generatedAudios:c,currentText:d,selectedVoiceId:u,selectedEmotionId:h,serverConfig:v,hardwareInfo:r,isServerSetupComplete:w,serverSetupStep:w?"complete":"license-input",licenseKey:a,licenseStatus:n,licenseLastChecked:i?new Date(i):null,isLoading:!1})}catch(t){console.error("Failed to initialize store:",t),e({isLoading:!1})}},addVoice:async t=>{let r={...t,id:crypto.randomUUID(),createdAt:new Date};try{let t=await s(r);await o.C.saveVoice(t),e(e=>({voices:[...e.voices,r]}))}catch(e){throw console.error("Failed to save voice:",e),e}},updateVoice:async(r,a)=>{let n=t(),i=n.voices.findIndex(e=>e.id===r);if(-1===i)return;let l={...n.voices[i],...a};try{let t=await s(l);await o.C.saveVoice(t),e(e=>({voices:e.voices.map(e=>e.id===r?l:e)}))}catch(e){throw console.error("Failed to update voice:",e),e}},deleteVoice:async r=>{try{await o.C.deleteVoice(r),e(e=>({voices:e.voices.filter(e=>e.id!==r),selectedVoiceId:e.selectedVoiceId===r?null:e.selectedVoiceId,selectedEmotionId:e.selectedVoiceId===r?null:e.selectedEmotionId}));let a=t();null===a.selectedVoiceId&&(await o.C.saveSetting("selectedVoiceId",null),await o.C.saveSetting("selectedEmotionId",null))}catch(e){throw console.error("Failed to delete voice:",e),e}},addEmotionToVoice:async(r,a)=>{let n={...a,id:crypto.randomUUID()},i=t().voices.find(e=>e.id===r);if(!i)return;let l={...i,emotions:[...i.emotions,n]};try{let t=await s(l);await o.C.saveVoice(t),e(e=>({voices:e.voices.map(e=>e.id===r?l:e)}))}catch(e){throw console.error("Failed to add emotion:",e),e}},removeEmotionFromVoice:async(r,a)=>{let n=t().voices.find(e=>e.id===r);if(!n)return;let i={...n,emotions:n.emotions.filter(e=>e.id!==a)};try{let n=await s(i);await o.C.saveVoice(n),e(e=>({voices:e.voices.map(e=>e.id===r?i:e),selectedEmotionId:e.selectedEmotionId===a?null:e.selectedEmotionId})),null===t().selectedEmotionId&&await o.C.saveSetting("selectedEmotionId",null)}catch(e){throw console.error("Failed to remove emotion:",e),e}},setText:t=>{e({currentText:t}),o.C.saveSetting("currentText",t).catch(console.error)},setSelectedVoice:t=>{e({selectedVoiceId:t,selectedEmotionId:null}),o.C.saveSetting("selectedVoiceId",t).catch(console.error),o.C.saveSetting("selectedEmotionId",null).catch(console.error)},setSelectedEmotion:t=>{e({selectedEmotionId:t}),o.C.saveSetting("selectedEmotionId",t).catch(console.error)},setProcessing:t=>e({isProcessing:t}),addGeneratedAudio:async(t,r)=>{try{if(!t.id||!t.voiceId||!r)throw Error("Invalid audio data");if(0===r.size)throw Error("Audio blob is empty");let a={id:t.id,text:t.text,voiceId:t.voiceId,emotionId:t.emotionId,audioBlob:r,createdAt:t.createdAt};return await o.C.saveGeneratedAudio(a),e(e=>({generatedAudios:[...e.generatedAudios,t]})),!0}catch(e){throw console.error("Failed to save generated audio:",e),e}},removeGeneratedAudio:async t=>{try{await o.C.deleteGeneratedAudio(t),e(e=>({generatedAudios:e.generatedAudios.filter(e=>e.id!==t)}))}catch(e){throw console.error("Failed to delete generated audio:",e),e}},checkHardware:async()=>{e(e=>({hardwareInfo:{...e.hardwareInfo,isChecking:!0}}));let{licenseKey:r}=t();try{let t=await (0,i.qE)(),a=c(t);console.log("Detected hardware info:",a),e({hardwareInfo:a}),r?"local"===t.recommendedSetup?e({serverSetupStep:"server-download"}):"remote"===t.recommendedSetup?e({serverSetupStep:"url-input"}):e({serverSetupStep:"runpod-deploy"}):e({serverSetupStep:"license-input"}),await o.C.saveSetting("hardwareInfo",JSON.stringify(a))}catch(t){console.error("Hardware check failed:",t),e({hardwareInfo:{hasGPU:!1,vramGB:0,os:"windows",arch:"x64",isChecking:!1,gpus:[],totalVRAM:0,recommendedSetup:"runpod",detectionTimestamp:new Date},serverSetupStep:"runpod-deploy"})}},setServerConfig:async t=>{e({serverConfig:t}),await o.C.saveSetting("serverConfig",JSON.stringify(t))},setLicenseKey:async t=>{e({licenseKey:t}),await o.C.saveSetting("licenseKey",t)},verifyLicense:async()=>{let{licenseKey:r,serverConfig:a}=t();if(!r)return e({licenseStatus:"invalid"}),!1;e({licenseStatus:"checking"});try{if(!a)throw Error("Server not configured");let t=new FormData;t.append("license_key",r);let n=await fetch("".concat(a.url,"/verify-license"),{method:"POST",body:t});if(!n.ok)return e({licenseStatus:"invalid"}),await o.C.saveSetting("licenseStatus","invalid"),!1;{let t=await n.json();return e({licenseStatus:t.status,licenseLastChecked:new Date}),await o.C.saveSetting("licenseStatus",t.status),await o.C.saveSetting("licenseLastChecked",new Date().toISOString()),t.valid}}catch(t){return console.error("License verification failed:",t),e({licenseStatus:"invalid"}),!1}},checkServerHealth:async()=>{let{serverConfig:r,licenseKey:a}=t();if(!r)return!1;try{let t;let n=new URL("".concat(r.url,"/health"));a&&n.searchParams.append("license_key",a),console.log("Health check URL:",n.toString());let i=await fetch(n.toString(),{method:"GET",timeout:5e3});if(!i.ok){let t={...r,status:"offline",current_model:null,lastChecked:new Date};return e({serverConfig:t}),await o.C.saveSetting("serverConfig",JSON.stringify(t)),!1}let s=await i.text();try{t=JSON.parse(s)}catch(e){return console.error("JSON parse error:",e),!1}if(!1===t.license_valid){e({licenseStatus:t.license_status||"invalid"});let a={...r,status:"offline",current_model:null,lastChecked:new Date};return e({serverConfig:a}),await o.C.saveSetting("serverConfig",JSON.stringify(a)),!1}let l="healthy"===t.status;t.license_status&&(e({licenseStatus:t.license_status,licenseLastChecked:new Date}),await o.C.saveSetting("licenseStatus",t.license_status),await o.C.saveSetting("licenseLastChecked",new Date().toISOString()));let c={...r,status:l?"online":"offline",current_model:t.current_model||null,cpu_usage:t.cpu_usage||0,gpu_available:t.gpu_available||!1,gpu_memory_usage:t.gpu_memory_usage||0,gpu_utilization:t.gpu_utilization||0,license_recheck_in_hours:t.license_recheck_in_hours||0,ram_usage_percent:t.ram_usage_percent||0,model_loaded:t.model_loaded||!1,warmup_complete:t.warmup_complete||!1,lastChecked:new Date};return e({serverConfig:c}),await o.C.saveSetting("serverConfig",JSON.stringify(c)),l}catch(a){let t={...r,status:"offline",current_model:null,lastChecked:new Date};return e({serverConfig:t}),await o.C.saveSetting("serverConfig",JSON.stringify(t)),!1}},downloadAndStartServer:async r=>{let{hardwareInfo:a}=t();if(!a)throw Error("Hardware info not available");if(!await (0,i.Vt)())throw Error("Cannot setup local server in web environment");e({serverSetupStep:"server-start"});try{let o=n.Yg.getInstance();r&&o.setProgressCallback(r),await o.setupLocalServer();let i={type:"local",url:o.getServerUrl(),current_model:null,cpu_usage:0,gpu_available:a.hasGPU,gpu_memory_usage:null,gpu_utilization:null,model_loaded:!1,ram_usage_percent:0,warmup_complete:!1,status:"checking"};if(await t().setServerConfig(i),await t().checkServerHealth())e({isServerSetupComplete:!0,serverSetupStep:"complete"});else throw Error("Server failed to start properly")}catch(t){throw console.error("Server setup failed:",t),e({serverSetupStep:"url-input"}),t}},deployToRunPod:async(t,r)=>{e({serverSetupStep:"runpod-deploy"});try{var a,o;if(null===(o=window.pywebview)||void 0===o?void 0:null===(a=o.api)||void 0===a?void 0:a.start_runpod_deployment)await window.pywebview.api.start_runpod_deployment(t);else throw Error("RunPod deployment is only available in the desktop application.")}catch(t){console.error("Failed to start RunPod deployment:",t),r({stage:"error",progress:0,message:"Failed to start deployment process.",error:t instanceof Error?t.message:String(t)}),e({serverSetupStep:"runpod-deploy"})}},getVoiceSampleBlob:async(e,t)=>{let r=await o.C.getVoice(e);if(!r)return null;if(t){let e=r.emotions.find(e=>e.id===t);return(null==e?void 0:e.audioBlob)||null}return r.mainAudioBlob},setServerSetupStep:t=>e({serverSetupStep:t})}))}}]);